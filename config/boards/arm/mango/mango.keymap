#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/ext_power.h>

#define BASE 0
#define GAME 1
#define NUM  2
#define NAV  3

/ {
keymap {
    compatible = "zmk,keymap";

/*                                  
*  DEFAULT 
* 
*        ` ~             _____                                               _____
*        |        .-----|  E  |-----._____                       _____.-----|  I  |-----.
*      _____.-----|  W  |_____|  R  |  T  |                     |  Y  |  U  |_____|  O  |-----._____
*     | NAV |  Q  |-----|  D  |-----|_____|                     |_____|-----|  K  |-----|  P  | GUI |  
*     |_____|-----|  S  |_____|  F  |  G  |                     |  H  |  J  |_____|  L  |-----|_____|  
*     | TAB |  A  |-----|  C  |-----|_____|                     |_____|-----| , < |-----| ; : | ' " |  
*     |_____|-----|  X  |_____|  V  |  B  |                     |  N  |  M  |_____| . > |-----|_____|  
*     | CTRL|  Z  |-----'   .-'---.=|_____|.-.._           _..-.|_____|=.---'-.   '-----| / ? | ALT |
*     !_____!-----'         | BSP |SHIFT| /     /         \     \ | NUM | ESC |         '-----!_____!
*              |            '-----!_____!/ ENT /           \ SPC \!_____!-----'            |
*            SHIFT                      '--.._/             \_..--'                      SHIFT
*
*
*                          VUP                                              MUP
*                          __                                                __
*                       __|  |__                                          __|  |__
*                PREV  |_TGPLAY_|  NEXT                           MLEFT  |_MCLK-1_|  MRIGHT
*                         |__|                                              |__|
*                                                                             
*                        VDOWN                                             MDOWN
*/

default_layer {
    label = "BASE";
    bindings = <
        &lhkt NAV GRAVE &kp Q       &kp W       &kp E       &kp R       &kp T               &kp Y       &kp U       &kp I       &kp O       &kp P       &kp RGUI
        &kp TAB         &kp A       &kp S       &kp D       &kp F       &kp G               &kp H       &kp J       &kp K       &kp L       &kp SEMI    &kp SQT
        &kp LCTRL       &mt LSHFT Z &kp X       &kp C       &kp V       &kp B               &kp N       &kp M       &kp COMMA   &kp DOT  &mt RSHFT FSLH &kp RALT
                                                &kp BSPC &kp LSHFT  &kp ENTER               &kp SPACE   &mo NUM &kp ESC

        &rgb_ug RGB_BRD &kp C_VOL_UP &rgb_ug RGB_BRI &kp C_VOL_DN   &none               &none       &kp RIGHT   &kp UP      &kp LEFT    &kp DOWN
    >;
};

/* 
*  GAME - this just swaps space and enter
*/

game_layer {
    label = "GAME";
    bindings = <
        &trans      &trans      &trans      &trans      &trans      &trans              &trans      &trans      &trans      &trans      &trans      &trans
        &trans      &trans      &trans      &trans      &trans      &trans              &trans      &trans      &trans      &trans      &trans      &trans
        &trans      &trans      &trans      &trans      &trans      &trans              &trans      &trans      &trans      &trans      &trans      &trans
                                            &trans      &trans   &kp SPACE              &kp ENTER   &trans      &trans

                    &trans      &trans      &trans      &trans      &trans              &trans      &trans      &trans      &trans      &trans
    >;
};

/*                                  
*  NUMBERS
*        ` ~             _____                                               _____
*        |        .-----|  #  |-----._____                       _____.-----|  *  |-----.
*      _____.-----|  @  |_____|  $  |  %  |                     |  ^  |  &  |_____|  (  |-----._____
*     | NAV |  !  |-----|  3  |-----|_____|                     |_____|-----|  8  |-----|  )  | GUI |  
*     |_____|-----|  2  |_____|  4  |  5  |                     |  6  |  7  |_____|  9  |-----|_____|  
*     | TAB |  1  |-----|SCRSH|-----|_____|                     |_____|-----| [ { |-----|  0  | ' " |  
*     |_____|-----|     |_____|  |  |  _  |                     | - _ | = + |_____| ] } |-----|_____|  
*     | CTRL| ` ~ |-----'   .-'---.=|_____|.-.._           _..-.|_____|=.---'-.   '-----| \ | | ALT |
*     !_____!-----'         | DEL |SHIFT| /     /         \     \ | NUM | ESC |         '-----!_____!
*              |            '-----!_____!/ ENT /           \ SPC \!_____!-----'            |
*            SHIFT                      '--.._/             \_..--'                      SHIFT
*
*
*                     BRIGHTNESS UP                                         MUP
*                          __                                                __
*                       __|  |__                                          __|  |__
*         PREV EFFECT  |_UDGLOW_|  NEXT EFFECT                    MLEFT  |_MCLK-2_|  MRIGHT
*                         |__|                                              |__|
*                                                                             
*                    BRIGHTNESS DOWN                                       MDOWN
*/

numbers_layer {
    label = "NUM";
    bindings = <
        &trans      &kp EXCL    &kp AT      &kp HASH    &kp DLLR    &kp PRCNT           &kp CARET   &kp AMPS    &kp ASTRK   &kp LPAR    &kp RPAR    &trans      
        &trans      &kp N1      &kp N2      &kp N3      &kp N4      &kp N5              &kp N6      &kp N7      &kp N8      &kp N9      &kp N0      &trans      
        &trans  &mt LSHFT GRAVE &trans    &kp LG(LS(S)) &kp PIPE    &kp UNDER           &kp MINUS   &kp EQUAL   &kp LBKT    &kp RBKT &mt RSHFT BSLH &trans      
                                            &kp DEL     &trans      &trans              &trans      &trans      &trans      
                                            
                    &trans      &trans      &trans      &trans      &trans              &trans      &trans      &trans      &trans      &trans
    >;
};

/*                                  
*  NAVIGATION
*        ` ~             _____                                               _____
*        |        .-----| MUTE|-----._____                       _____.-----| UP  |-----.
*      _____.-----|VDOWN|_____| VUP | SWAP|                     |BTNXT|BRI_D|_____|BRI_U|-----._____
*     | NAV |BTTOG|-----|     |-----|_____|                     |_____|-----| DOWN|-----| F12 | GUI |  
*     |_____|-----|     |_____|     |RGB_E|                     |UNGLW| LEFT|_____|RIGHT|-----|_____|  
*     | TAB |BTCLR|-----| F3  |-----|_____|                     |_____|-----| F8  |-----| F11 | ' " |  
*     |_____|-----| F2  |_____| F4  | F5  |                     | F6  | F7  |_____| F9  |-----|_____|  
*     | CTRL| F1  |-----'   .-'---.=|_____|.-.._           _..-.|_____|=.---'-.   '-----| F10 |SHIFT|
*     !_____!-----'         | DEL |SHIFT| /     /         \     \ | NUM | ESC |         '-----!_____!
*              |            '-----!_____!/ ENT /           \ SPC \!_____!-----'            |
*            SHIFT                      '--.._/             \_..--'                      SHIFT
*
*
*                     BRIGHTNESS UP                                       SCROLLUP
*                          __                                                __
*                       __|  |__                                          __|  |__
*         PREV EFFECT  |__RGB___|  NEXT EFFECT               SCROLLLEFT  |_MCLK-C_|  SCROLLRIGHT
*                         |__|                                              |__|
*                                                                             
*                    BRIGHTNESS DOWN                                     SCROLLDOWN
*/

navigation_layer {
    label = "NAV";
    bindings = <
        &trans    &out OUT_TOG &kp C_VOL_DN &kp C_MUTE  &kp C_VOL_UP &tog GAME          &bt BT_NXT &rgb_ug RGB_BRD &kp UP &rgb_ug RGB_BRI &kp F12   &trans      
        &trans     &bt BT_CLR  &trans       &trans      &trans &rgb_ug RGB_EFF          &rgb_ug RGB_TOG &kp LEFT &kp DOWN   &kp RIGHT   &kp F11     &trans      
        &trans    &mt LSHFT F1 &kp F2       &kp F3      &kp F4       &kp F5             &kp F6      &kp F7      &kp F8      &kp F9    &mt RSHFT F10 &trans      
                                            &kp DEL     &trans       &trans             &trans      &trans      &trans      
                                            
                    &trans     &trans       &trans      &trans       &trans             &trans      &trans      &trans      &trans      &trans
    >;
};

};
};

/ {
combos {
    compatible = "zmk,combos";

/* 
*  COMBOS
*                                               _____________________         _____________________
*                                            __|__                   |       |                   __|__ 
*          _______________          _____   |     |                  v       v                  |     |   _____          _______________
*         |               |  .-----|  3  |-----._____                                         _____.-----|  8  |-----.  |               |
*         v       _____.-----|  2  |_____|  4  |  5  |               (       )               |  6  |  7  |_____|  9  |-----._____       v
*             __ |  0  |  1  |-----| 15  |-----|_____| --.__  +                     -  __.-- |_____|-----| 20  |-----| 10  | 11  | __
*     ESC  --|__ |_____|-----| 14  |_____| 16  | 17  | --'           [       ]           '-- | 18  | 19  |_____| 21  |-----|_____| __|--  "
*             __ | 12  | 13  |-----| 27  |-----|_____| --.__  *                     =  __.-- |_____|-----| 32  |-----| 22  | 23  | __ 
*     TAB  --|__ |_____|-----| 26  |_____| 28  | 29  | --'           {       }           '-- | 30  | 31  |_____| 33  |-----|_____| __|--  '
*                | 24  | 25  |-----'   .-'---.=|_____|.-.._                             _..-.|_____|=.---'-.   '-----| 34  | 35  | 
*                !_____!-----'         | 36  | 37  | /     /                           \     \ | 40  | 41  |         '-----!_____!
*                                      '-----!_____!/ 38  /                             \ 39  \!_____!-----'          
*                                                  '--.._/                               \_..--'  |_____|
*                                                                                                    |
*                                                                                                   DEL       
*/

// ESC
    combo_esc {
        timeout-ms = <20>;
        key-positions = <1 13>;
        bindings = <&kp ESC>;
    };

// TAB
    combo_tab {
        timeout-ms = <20>;
        key-positions = <13 25>;
        bindings = <&kp TAB>;
    };

// '
    combo_sqt {
        timeout-ms = <20>;
        key-positions = <22 34>;
        bindings = <&kp SQT>;
    };

// "
    combo_dqt {
        timeout-ms = <20>;
        key-positions = <10 22>;
        bindings = <&kp DQT>;
    };

// ()
    combo_lpar {
        timeout-ms = <20>;
        key-positions = <4 5>;
        bindings = <&kp LPAR>;
    };

    combo_rpar {
        timeout-ms = <20>;
        key-positions = <6 7>;
        bindings = <&kp RPAR>;
    };

// []
    combo_lbkt {
        timeout-ms = <20>;
        key-positions = <16 17>;
        bindings = <&kp LBKT>;
    };

    combo_rbkt {
        timeout-ms = <20>;
        key-positions = <18 19>;
        bindings = <&kp RBKT>;
    };

// {}
    combo_lbrc {
        timeout-ms = <20>;
        key-positions = <28 29>;
        bindings = <&kp LBRC>;
    };

    combo_rbrc {
        timeout-ms = <20>;
        key-positions = <30 31>;
        bindings = <&kp RBRC>;
    };

// DEL
    combo_del {
        timeout-ms = <20>;
        key-positions = <40 41>;
        bindings = <&kp DEL>;
    };

// +
    combo_plus {
        timeout-ms = <20>;
        key-positions = <5 17>;
        bindings = <&kp PLUS>;
    };

// *
    combo_astrk {
        timeout-ms = <20>;
        key-positions = <17 29>;
        bindings = <&kp ASTRK>;
    };

// -
    combo_minus {
        timeout-ms = <20>;
        key-positions = <6 18>;
        bindings = <&kp MINUS>;
    };

// =
    combo_equal {
        timeout-ms = <20>;
        key-positions = <18 30>;
        bindings = <&kp EQUAL>;
    };

};
};

/ {
macros {

// Screenshot
    SCRSHT: scrsht {
        label = "Screenshot";
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        bindings
            = <&macro_press &kp LGUI>
            , <&macro_press &kp LSHFT>
            , <&macro_tap &kp S>
            , <&macro_release &kp LSHFT>
            , <&macro_release &kp LGUI>
            ;
    };
};
};

/ {
behaviors {

    lhkt: layer_hold_key_tap {
        compatible = "zmk,behavior-hold-tap";
        label = "LAYER_HOLD_KEY_TAP";
        #binding-cells = <2>;
        tapping-term-ms = <200>;    // <---[[moderate duration]]
        quick-tap-ms = <0>;
        flavor = "hold-preferred";
        bindings = <&mo>, <&kp>;
    };
};
};
