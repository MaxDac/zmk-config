#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/ext_power.h>

#define BASE 0
#define TYPE 1
#define GAME 2
#define NUM  3
#define NAV  4

/ {
keymap {
    compatible = "zmk,keymap";

/*                                  
*  DEFAULT 
* 
*        ` ~             _____                                               _____
*        |        .-----|  E  |-----._____                       _____.-----|  I  |-----.
*      _____.-----|  W  |_____|  R  |  T  |                     |  Y  |  U  |_____|  O  |-----._____
*     |     |Q/NAV|-----|  D  |-----|_____|                     |_____|-----|  K  |-----|  P  |     |  
*     |_____|-----|  S  |_____|  F  |  G  |                     |  H  |  J  |_____|  L  |-----|_____|  
*     |     |  A  |-----|  C  |-----|_____|                     |_____|-----| , < |-----| ; : |     |  
*     |_____|-----|  X  |_____|  V  |  B  |                     |  N  |  M  |_____| . > |-----|_____|  
*     |     |Z/LCT|-----'   .-'---.=|_____|.-.._           _..-.|_____|=.---'-.   '-----|ALT'"|     |
*     !_____!-----'         | BSP |SHIFT| / ENT /         \     \ |TAB/N|ESC/C|         '-----!_____!
*                           '-----!_____!/LGUI /           \ SPC \!_____!-----' 
*                                       '--.._/             \_..--'
*
*
*                          VUP                                              MUP
*                          __                                                __
*                       __|  |__                                          __|  |__
*                PREV  |_TGPLAY_|  NEXT                           MLEFT  |_MCLK-1_|  MRIGHT
*                         |__|                                              |__|
*                                                                             
*                        VDOWN                                             MDOWN
*/

default_layer {
    label = "BASE";
    bindings = <
        &none      &lhkt NAV Q &kp W       &kp E       &kp R       &kp T               &kp Y       &kp U       &kp I       &kp O       &kp P          &none
        &none      &kp A       &kp S       &kp D       &kp F       &kp G               &kp H       &kp J       &kp K       &kp L       &mt LALT SEMI  &none
        &none      &mt LCTRL Z &kp X       &kp C       &kp V       &kp B               &kp N       &kp M       &kp COMMA   &kp DOT    &mt RSHIFT SQT  &none
                                                &kp BSPC &kp LSHFT  &mt LGUI ENTER          &kp SPACE   &lhkt NUM TAB &mt RCTRL ESC

        &rgb_ug RGB_BRD &kp C_VOL_UP &rgb_ug RGB_BRI &kp C_VOL_DN   &none               &none       &kp RIGHT   &kp UP      &kp LEFT    &kp DOWN
    >;
};

/*                                  
*  TYPING LAYER 
*  Exactly the same as the default layer, but without all the layer switching keys, and the ALT.
*  This is meant to allow free typing experience.
*  This layer should be easily swappable, and returning to the default layer should be very easy.
*
*        ` ~             _____                                               _____
*        |        .-----|  E  |-----._____                       _____.-----|  I  |-----.
*      _____.-----|  W  |_____|  R  |  T  |                     |  Y  |  U  |_____|  O  |-----._____
*     |     |  Q  |-----|  D  |-----|_____|                     |_____|-----|  K  |-----|  P  |     |  
*     |_____|-----|  S  |_____|  F  |  G  |                     |  H  |  J  |_____|  L  |-----|_____|  
*     |     |  A  |-----|  C  |-----|_____|                     |_____|-----| , < |-----| ; : |     |  
*     |_____|-----|  X  |_____|  V  |  B  |                     |  N  |  M  |_____| . > |-----|_____|  
*     |     |  Z  |-----'   .-'---.=|_____|.-.._           _..-.|_____|=.---'-.   '-----| ' " |     |
*     !_____!-----'         |BSP/N|SHIFT| /LALT /         \     \ | DEF.|? CTR|         '-----!_____!
*                           '-----!_____!/ ENT /           \ SPC \!_____!-----' 
*                                       '--.._/             \_..--'
*
*
*                          VUP                                              MUP
*                          __                                                __
*                       __|  |__                                          __|  |__
*                PREV  |_TGPLAY_|  NEXT                           MLEFT  |_MCLK-1_|  MRIGHT
*                         |__|                                              |__|
*                                                                             
*                        VDOWN                                             MDOWN
*/

type_layer {
    label = "TYPE";
    bindings = <
        &trans      &kp Q       &trans      &trans      &trans      &trans              &trans      &trans      &trans      &trans      &trans      &trans
        &trans      &trans      &trans      &trans      &trans      &trans              &trans      &trans      &trans      &trans      &kp SEMI    &trans
        &trans      &kp Z       &trans      &trans      &trans      &trans              &trans      &trans      &trans      &trans      &kp SQT     &trans
                                         &lhkt NUM BSPC &kp LSHFT   &mt LALT ENTER      &kp SPACE   &tog TYPE   &mt LCTRL FSLH

        &rgb_ug RGB_BRD &kp C_VOL_UP &rgb_ug RGB_BRI &kp C_VOL_DN   &none               &none       &kp RIGHT   &kp UP      &kp LEFT    &kp DOWN
    >;
};

/* 
*  GAME - this just swaps space and enter, and the esc with the backspace. An additional enter is added to the left side.
*/

game_layer {
    label = "GAME";
    bindings = <
        &trans      &trans      &trans      &trans      &trans      &trans              &trans      &trans      &trans      &trans      &trans      &trans
        &trans      &trans      &trans      &trans      &trans      &trans              &trans      &trans      &trans      &trans      &trans      &trans
        &trans      &trans      &trans      &trans      &trans      &kp ENTER           &trans      &trans      &trans      &trans      &trans      &trans
                                            &kp ESC     &trans      &kp SPACE           &trans      &trans      &trans

                    &trans      &trans      &trans      &trans      &trans              &trans      &trans      &trans      &trans      &trans
    >;
};

/*                                  
*  NUMBERS
*                        _____                                               _____
*                 .-----|  3  |-----._____                       _____.-----|  8  |-----.
*      _____.-----|  2  |_____|  4  |  5  |                     |  6  |  7  |_____|  9  |-----._____
*     |     |  1  |-----|  #  |-----|_____|                     |_____|-----|  *  |-----|  0  |     |  
*     |_____|-----|  @  |_____|  $  |  %  |                     |  ^  |  &  |_____|  (  |-----|_____|  
*     |     |  !  |-----| \ | |-----|_____|                     |_____|-----|  |  |-----|  )  |     |  
*     |_____|-----| / ? |_____|  _  |  +  |                     | = + | - _ |_____|  >  |-----|_____|  
*     |     | ` ~ |-----'   .-'---.=|_____|.-.._           _..-.|_____|=.---'-.   '-----|  "  |     |
*     !_____!-----'         | DEL |SHIFT| /     /         \     \ | NUM | NAV |         '-----!_____!
*                           '-----!_____!/ SPC /           \ SPC \!_____!-----'
*                                       '--.._/             \_..--'
*
*
*                     BRIGHTNESS UP                                         MUP
*                          __                                                __
*                       __|  |__                                          __|  |__
*         PREV EFFECT  |_UDGLOW_|  NEXT EFFECT                    MLEFT  |_MCLK-2_|  MRIGHT
*                         |__|                                              |__|
*                                                                             
*                    BRIGHTNESS DOWN                                       MDOWN
*/

numbers_layer {
    label = "NUM";
    bindings = <
        &trans      &kp N1      &kp N2      &kp N3      &kp N4      &kp N5              &kp N6      &kp N7      &kp N8      &kp N9      &kp N0      &trans
        &trans      &kp EXCL    &kp AT      &kp HASH    &kp DLLR    &kp PRCNT           &kp CARET   &kp AMPS    &kp ASTRK   &kp LPAR    &kp RPAR    &trans      
        &trans      &kp GRAVE   &kp FSLH    &kp NUBS    &kp UNDER   &kp PLUS            &kp EQUAL   &kp MINUS   &kp PIPE    &kp GT      &kp DQT     &trans
                                            &kp DEL     &trans      &kp SPACE           &trans      &trans      &mo NAV      
                                            
                    &trans      &trans      &trans      &trans      &trans              &trans      &trans      &trans      &trans      &trans
    >;
};

/*                                  
*  NAVIGATION
*        ` ~             _____                                               _____
*        |        .-----| F3  |-----._____                       _____.-----|LBRC |-----.
*      _____.-----| F2  |_____| F4  | F5  |                     |LBKT |RBKT |_____|RBRC |-----._____
*     |BTCLR|     |-----| F8  |-----|_____|                     |_____|-----| UP  |-----|MINUS|     |  
*     |_____|-----| F7  |_____| F9  | F10 |                     |LEFT | DOWN|_____|RIGHT|-----|_____|  
*     |BTTOG| F6  |-----|TYPE |-----|_____|                     |_____|-----|PG_UP|-----|GAME |     |  
*     |_____|-----| F1  |_____| F11 | F12 |                     | HOME|PG_DN|_____| END |-----|_____|  
*     |BTNXT|     |-----'   .-'---.=|_____|.-.._           _..-.|_____|=.---'-.   '-----| / ? |     |
*     !_____!-----'         | DEL |SHIFT| /     /         \     \ | NUM |RALT |         '-----!_____!
*                           '-----!_____!/ ENT /           \ SPC \!_____!-----'
*                                       '--.._/             \_..--'
*
*
*                     BRIGHTNESS UP                                       SCROLLUP
*                          __                                                __
*                       __|  |__                                          __|  |__
*         PREV EFFECT  |__RGB___|  NEXT EFFECT               SCROLLLEFT  |_MCLK-C_|  SCROLLRIGHT
*                         |__|                                              |__|
*                                                                             
*                    BRIGHTNESS DOWN                                     SCROLLDOWN
*/

navigation_layer {
    label = "NAV";
    bindings = <
        &bt BT_CLR &trans      &kp F2       &kp F3      &kp F4  &kp F5        &kp LBKT &kp RBKT  &kp LBRC  &kp RBRC  &kp MINUS &trans
      &out OUT_TOG &kp F6      &kp F7       &kp F8      &kp F9  &kp F10       &kp LEFT &kp DOWN  &kp UP    &kp RIGHT &tog GAME &trans
        &bt BT_NXT &none       &kp F1       &tog TYPE   &kp F11 &kp F12       &kp HOME &kp PG_DN &kp PG_UP &kp END   &kp FSLH  &trans
                                        &kp DEL     &trans       &trans       &trans      &trans      &kp RALT      
                                        
                    &trans     &trans       &trans      &trans       &trans             &trans      &trans      &trans      &trans      &trans
    >;
};

};
};

/ {
combos {
    compatible = "zmk,combos";

/* 
*  COMBOS
*                                               _____________________         _____________________
*                                            __|__                   |       |                   __|__ 
*          _______________          _____   |     |                  v       v                  |     |   _____          _______________
*         |               |  .-----|  3  |-----._____                                         _____.-----|  8  |-----.  |               |
*         v       _____.-----|  2  |_____|  4  |  5  |               (       )               |  6  |  7  |_____|  9  |-----._____       v
*             __ |  0  |  1  |-----| 15  |-----|_____| --.__  +                     -  __.-- |_____|-----| 20  |-----| 10  | 11  | __
*     ESC  --|__ |_____|-----| 14  |_____| 16  | 17  | --'           [       ]           '-- | 18  | 19  |_____| 21  |-----|_____| __|--  "
*             __ | 12  | 13  |-----| 27  |-----|_____| --.__  *                     =  __.-- |_____|-----| 32  |-----| 22  | 23  | __ 
*     TAB  --|__ |_____|-----| 26  |_____| 28  | 29  | --'           {       }           '-- | 30  | 31  |_____| 33  |-----|_____| __|--  '
*                | 24  | 25  |-----'   .-'---.=|_____|.-.._                             _..-.|_____|=.---'-.   '-----| 34  | 35  | 
*                !_____!-----'         | 36  | 37  | /     /                           \     \ | 40  | 41  |         '-----!_____!
*                                      '-----!_____!/ 38  /                             \ 39  \!_____!-----'          
*                                                  '--.._/                               \_..--'  |_____|
*                                                                                                    |
*                                                                                                   DEL       
*/

// ESC
    combo_esc {
        timeout-ms = <20>;
        key-positions = <1 13>;
        bindings = <&kp ESC>;
    };

// TAB
    combo_tab {
        timeout-ms = <20>;
        key-positions = <13 25>;
        bindings = <&kp TAB>;
    };

// '
    combo_sqt {
        timeout-ms = <20>;
        key-positions = <22 34>;
        bindings = <&kp SQT>;
    };

// "
    combo_dqt {
        timeout-ms = <20>;
        key-positions = <10 22>;
        bindings = <&kp DQT>;
    };

// ()
    combo_lpar {
        timeout-ms = <20>;
        key-positions = <4 5>;
        bindings = <&kp LPAR>;
    };

    combo_rpar {
        timeout-ms = <20>;
        key-positions = <6 7>;
        bindings = <&kp RPAR>;
    };

// []
    combo_lbkt {
        timeout-ms = <20>;
        key-positions = <16 17>;
        bindings = <&kp LBKT>;
    };

    combo_rbkt {
        timeout-ms = <20>;
        key-positions = <18 19>;
        bindings = <&kp RBKT>;
    };

// {}
    combo_lbrc {
        timeout-ms = <20>;
        key-positions = <28 29>;
        bindings = <&kp LBRC>;
    };

    combo_rbrc {
        timeout-ms = <20>;
        key-positions = <30 31>;
        bindings = <&kp RBRC>;
    };

// DEL
    combo_del {
        timeout-ms = <20>;
        key-positions = <40 41>;
        bindings = <&kp DEL>;
    };

// +
    combo_plus {
        timeout-ms = <20>;
        key-positions = <5 17>;
        bindings = <&kp PLUS>;
    };

// *
    combo_astrk {
        timeout-ms = <20>;
        key-positions = <17 29>;
        bindings = <&kp ASTRK>;
    };

// -
    combo_minus {
        timeout-ms = <20>;
        key-positions = <6 18>;
        bindings = <&kp MINUS>;
    };

// =
    combo_equal {
        timeout-ms = <20>;
        key-positions = <18 30>;
        bindings = <&kp EQUAL>;
    };

};
};

/ {
macros {

// Screenshot
    SCRSHT: scrsht {
        label = "Screenshot";
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        bindings
            = <&macro_press &kp LGUI>
            , <&macro_press &kp LSHFT>
            , <&macro_tap &kp S>
            , <&macro_release &kp LSHFT>
            , <&macro_release &kp LGUI>
            ;
    };
};
};

/ {
behaviors {

    lhkt: layer_hold_key_tap {
        compatible = "zmk,behavior-hold-tap";
        label = "LAYER_HOLD_KEY_TAP";
        #binding-cells = <2>;
        tapping-term-ms = <200>;    // <---[[moderate duration]]
        quick-tap-ms = <0>;
        flavor = "hold-preferred";
        bindings = <&mo>, <&kp>;
    };
};
};
